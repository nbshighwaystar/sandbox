Rainbow Tables
* Pre-computed tables of password hashes for each
    hasing algorithm

Salt
    * Additional data added to the password before encryption
    * "Put salt on the {$password}";

    * Knowing password requires also knowing the salt string

Unique Salt
    * Create salt using strings unique to each user
    * "Put salt on the {$password} for {$username}";
    * Knowing password requires knowing the salt string 
        and the user string
    * Rainbow tables are still impossibly large, but now each
        user's salt is unique too

Randowm Salt
    * Create salt using pseudo-random string (e.g. mt_rand, time)
    * "Put salt on the {$password} at " . time();
    * Knowing password requires knowing random string
    * Rainbow tables are useless, as each user's hash is 
        almost random, almost unique

Store Salt in Database
    * When using user data for salt and user data could change
    * When using random salt
    * Just the salt, not the password
    * Hash the salt so it will not be plain text

* $salt = md5(uniqid(mt_rand(), true));
* $format_and_salt = $format_string . $salt;
* $hashed_password = crypt($password), $format_and_salt);